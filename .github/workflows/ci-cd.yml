name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.23.4
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - run: go mod tidy
      - run: go test ./... -v

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: 1.23.4
      - run: go build -o rate-limiter-go
      - uses: actions/upload-artifact@v4
        with:
          name: rate-limiter-go
          path: rate-limiter-go

  release-alpha:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rate-limiter-go
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: v0.0.1-alpha.${{ github.run_number }}
          name: v0.0.1-alpha.${{ github.run_number }}
          prerelease: true
          draft: false
          files: rate-limiter-go
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-prod:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rate-limiter-go
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: rate-limiter-go
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
